{"version":3,"sources":["Actions/UserActions.js","Services/host.js","Services/userService.js","Sagas/userSagas.js","Actions/PlaylistActions.js","Services/playlistService.js","Selectors/userSelector.js","Sagas/playlistSagas.js","Actions/PlayerActions.js","Actions/SongActions.js","Services/songService.js","Sagas/songSagas.js","Sagas/index.js","Reducers/index.js","Reducers/PlayerReducer.js","Reducers/PlaylistReducer.js","Reducers/UserReducer.js","storeConfig.js","Components/Header/ExitButton.jsx","Components/Common/Header.jsx","Selectors/playerSelector.js","Components/Player/SongProgress.jsx","Selectors/playlistSelector.js","Components/Player/SongInfo.jsx","Components/Player/Play.jsx","Components/Player/Pause.jsx","Components/Player/Previous.jsx","Components/Player/Next.jsx","Components/Player/PlayerControls.jsx","Components/Player/Player.jsx","Components/Playlist/AddSong/AddSongDialog.jsx","Components/Playlist/AddNewSong.jsx","Components/Playlist/SongsOfPlaylist.jsx","Components/Playlist/Playlist.jsx","Components/Playlist/CurrentPlaylist.jsx","Components/Playlist/AddPlaylist/AddPlaylistDialog.jsx","Components/Playlist/AddNewPlaylist.jsx","Components/Playlist/PlaylistActions/EditPlaylistButton.jsx","Components/Common/FormDialog.jsx","Components/Playlist/PlaylistActions/DeletePlaylistButton.jsx","Components/Playlist/PlaylistActions/PlaylistListActions.jsx","Components/Playlists/PlaylistsList.jsx","Components/Playlist/AvailablePlaylists.jsx","Components/Common/Alert.jsx","Components/Pages/PlaylistsPage.jsx","Components/Subscription/LoginPanel.jsx","Components/Subscription/RegisterPanel.jsx","Components/Pages/EnterPage.jsx","Components/Pages/StartingPage.jsx","routes.jsx","App.jsx","index.js"],"names":["USER_ACTIONS","USER_LOGIN_REQUESTED_ACTION","USER_LOGIN_RESOLVED_ACTION","USER_LOGIN_REJECTED_ACTION","USER_SUBSCRIBE_REQUESTED_ACTION","USER_SUBSCRIBE_RESOLVED_ACTION","USER_SUBSCRIBE_REJECTED_ACTION","TOKEN_REFRESH_REQUESTED_ACTION","TOKEN_REFRESH_RESOLVED_ACTION","TOKEN_REFRESH_REJECTED_ACTION","USER_LOGOUT_REQUEST_ACTION","UseLoginResolveAction","jwtToken","username","type","UserLoginRejectAction","UserSubscribeResolved","UserSubscribeRejected","HOST","process","userLogin","email","password","axios","post","concat","userSubscribeService","userSubscribe","userSagas","action","data","regenerator_default","a","wrap","_context","prev","next","userLoginService","sent","put","token","t0","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","PLAYLIST_ACTIONS","PLAYLISTS_GET_REQUESTED_ACTION","PLAYLISTS_GET_RESOLVED_ACTION","PLAYLISTS_GET_REJECTED_ACTION","ONE_PLAYLIST_GET_REQUESTED_ACTION","ONE_PLAYLIST_GET_RESOLVED_ACTION","ONE_PLAYLIST_GET_REJECTED_ACTION","SELECT_SONG_REQUESTED_ACTION","SELECT_SONG_RESOLVED_ACTION","SELECT_SONG_REJECTED_ACTION","ALL_SONGS_REQUESTED","ALL_SONGS_RESOLVED","ALL_SONGS_REJECTED","ADD_PLAYLIST_REUQESTED","ADD_PLAYLIST_RESOLVED","ADD_PAYLIST_REJECTED","EDIT_PLAYLIST_NAME_REQUESTED","EDIT_PLAYLIST_NAME_RESOLVED","EDIT_PLAYLIST_NAME_REJECTED","REMOVE_PLAYLIST_REQUESTED","REMOVE_PLAYLIST_RESOLVED","REMOVE_PLAYLIST_REJECTED","LOAD_SONGS_REQUESTED_ACTION","LOAD_SONGS_RESOLVED_ACTION","LOAD_SONGS_REJECTED_ACTION","CLEAR_ALERT_ERROR","CLEAR_STATE_ACTION","getAllPlaylistsRejectAction","error","getAllPlaylistsResolveAction","playlists","addPlaylistResolveAction","playlist","addPlaylistRejectAction","editPlaylistNameRejectedAction","editPlaylistNameResolvedAction","removePlaylistResolvedAction","id","removePlaylistRejectedAction","selectSongResolveAction","song","selectSongRejectedAction","setSelectedSong","title","getPlaylists","get","headers","Authorization","addNewPlaylistService","editPlaylistTitleService","newTitle","removePlaylistService","delete","loginRequestedSelector","state","user","isLoading","userLoggedInSelector","isLoggedIn","jwtTokenSelector","addPlaylist","editPlaylist","removePlaylist","playlistSagas","select","getAllPlaylists","playlistSagas_marked","playlistSagas_marked2","playlistSagas_marked3","result","_context4","playlistId","_marked4","_context5","_marked5","PLAYER_ACTIONS","pauseAction","SONG_ACTIONS","SONG_ADD_REQUESTED_ACTION","SONG_ADD_RESOLVED_ACTION","SONG_ADD_REJECTED_ACTION","SONG_REMOVE_REQUESTED_ACTION","SONG_REMOVE_RESOLVED_ACTION","SONG_REMOVE_REJECTED_ACTON","SONG_EDIT_REQUESTED_ACTION","SONG_EDIT_RESOLVED_ACTON","SONG_EDIT_REJECTED_ACTON","SELECT_NEXT_REQUESTED_ACTION","SELECT_NEXT_RESOLVED_ACTION","SELECT_NEXT_REJECTED_ACTION","SELECT_PREVIOUS_REQUESTED_ACTION","SELECT_PREVIOUS_RESOLVED_ACTION","SELECT_PREVIOUS_REJECTED_ACTION","addSongResolveAction","newSong","removeSongResolveAction","songId","fetchSongService","removeSongService","addSongService","bytes","formData","FormData","append","Content-Type","select_song","uploadSong","removeSong","songSagas","base64","songBytes","blob","url","fileContents","base64ToArrayBuffer","Blob","window","URL","createObjectURL","songTitle","link","songSagas_marked","songSagas_marked2","songSagas_marked3","binaryString","atob","binaryLen","length","Uint8Array","i","ascii","charCodeAt","songSagas_marked4","rootSaga","all","Sagas_marked","history","initialPlayerState","playing","duration","ended","playerReducer","arguments","undefined","Object","objectSpread2","initialPlaylistState","songs","playlistsLoading","playlistError","selectedSong","nextSongId","previousSongId","selectedPlaylist","songIsLoading","playlistAlertContent","playlistReducer","song_idx","map","indexOf","next_idx","previous_idx","nextSong","find","idx","previousSong","toConsumableArray","filter","item","list","new_song","initialState","userReducer","createBrowserHistory","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","persistConfig","key","storage","middleware","routerMiddleware","persistedReducer","persistReducer","combineReducers","router","connectRouter","player","ExitButton","dispatch","useDispatch","react_default","createElement","IconButton","variant","onClick","ExitToApp_default","useStyles","makeStyles","theme","grow","flexGrow","appBar","padding","spacing","Header","classes","userIsLoggedIn","useSelector","className","AppBar","position","Toolbar","Typography","Header_ExitButton","playerIsPlayingSelector","root","width","& > * + *","marginTop","songsSelector","selectedSongSelector","selectedPlaylistSelector","playlistsSelector","playlistsLoadingSelector","playlistsErrorSelector","playlistAlertSelector","songIsLoadingSelector","nextSongSelector","previousSongSelector","paddingTop","paddingBottom","chipsSpacing","marginLeft","marginRight","SongInfo","handleDelete","Fragment","Chip","label","onDelete","Play","Button","fullWidth","disabled","color","disableElevation","PlayArrow_default","Pause","Pause_default","Previous","previous","SkipPrevious_default","Next","SkipNext_default","PlayerControls","_ref","songIsPlaying","Grid","container","direction","xs","Player_Previous","Player_Pause","Player_Play","Player_Next","Player","audio","Audio","useEffect","play","pause","LinearProgress","Player_SongInfo","Player_PlayerControls","AddSongDialog","open","dialogTitle","_ref$fnReject","fnAccept","fnReject","_useState","useState","_useState2","slicedToArray","setTitle","_useState3","_useState4","setSongBytes","onAccept","addSongRequestAction","Dialog","DialogTitle","DialogContent","TextField","autoFocus","value","onChange","evt","target","varint","multiple","files","name","reader","FileReader","onloadend","readyState","DONE","readAsBinaryString","loadSong","DialogActions","AddNewSong","openForm","setOpenForm","AddSong_AddSongDialog","overflowY","backgroundLight","backgroundColor","backgroundDark","SongsOfPlaylist","List","x","ListItem","button","ListItemText","primary","Playlist","Playlist_SongsOfPlaylist","Playlist_AddNewSong","paper","CurrentPlaylist","Paper","Components_Playlist_Playlist","Components_Player_Player","AddPlaylistDialog","_ref$dialogTitle","_ref$context","context","_ref$onReject","onReject","_ref$onAccept","_ref$defaultTitle","defaultTitle","DialogContentText","AddNewPlaylist","handleClickAddPlaylist","AddPlaylist_AddPlaylistDialog","addPlaylistRequestAction","EditPlaylistButton","openEditPlaylistDialog","setOpenEditPlaylistDialog","editPlaylistNameRequestAction","Edit_default","FormDialog","_ref$title","_ref$text","text","_ref$open","DeletePlaylistButton","openConfirmDialog","setOpenConfirmDialog","Delete_default","Common_FormDialog","removePlaylistRequestedAction","PlaylistListActions","PlaylistActions_EditPlaylistButton","PlaylistActions_DeletePlaylistButton","maxHeight","PlaylistsList","playlistsError","CircularProgress","loadPlaylistSongs","loadSongsRequestedAction","p","ListItemSecondaryAction","PlaylistActions_PlaylistListActions","AvailablePlaylists","Playlists_PlaylistsList","Playlist_AddNewPlaylist","AlertItem","props","Alert_Alert","assign","elevation","Alert","message","clearAlert","displayAlert","Snackbar","anchorOrigin","vertical","horizontal","onClose","severity","page","PlaylistsPage","gutterBottom","component","md","Playlist_CurrentPlaylist","Playlist_AvailablePlaylists","Common_Alert","flex","display","loading","margin","LoginPanel","setEmail","setPassword","loginRequested","align","FormControl","InputLabel","Input","FormHelperText","preventDefault","UserLoginRequestAction","RegisterPanel","_useState5","_useState6","passwordConfirm","setPasswordConfirm","UserSubscribeRequest","EnterPage","Subscription_LoginPanel","Subscription_RegisterPanel","content","StartingPage","match","userLoggedIn","CssBaseline","Common_Header","appBarSpacer","react_router","exact","path","Pages_PlaylistsPage","Pages_EnterPage","Routes","esm","_createStore","store","createStore","applyMiddleware","apply","persistor","persistStore","run","createMuiTheme","palette","main","secondary","typography","useNextVariants","fontFamily","join","App","react","fallback","es","integration_react","ThemeProvider","routes","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ced7e2d4.chunk.js","sourcesContent":["export const USER_ACTIONS = {\n  USER_LOGIN_REQUESTED_ACTION : 'USER_LOGIN_REQUESTED_ACTION',\n  USER_LOGIN_RESOLVED_ACTION : 'USER_LOGIN_RESOLVED_ACTION',\n  USER_LOGIN_REJECTED_ACTION : 'USER_LOGIN_REJECTED_ACTION',\n  USER_SUBSCRIBE_REQUESTED_ACTION : 'USER_SUBSCRIBE_REQUESTED_ACTION',\n  USER_SUBSCRIBE_RESOLVED_ACTION : 'USER_SUBSCRIBE_RESOLVED_ACTION',\n  USER_SUBSCRIBE_REJECTED_ACTION : 'USER_SUBSCRIBE_REJESTED_ACTION',\n  TOKEN_REFRESH_REQUESTED_ACTION : 'TOKEN_REFRESH_REQUESTED_ACTION',\n  TOKEN_REFRESH_RESOLVED_ACTION : 'TOKEN_REFRESH_RESOLVED_ACTION',\n  TOKEN_REFRESH_REJECTED_ACTION : 'TOKEN_REFRESH_REJECTED_ACTION',\n  USER_LOGOUT_REQUEST_ACTION : 'USER_LOGOUT_REQUEST_ACTION'\n}\n\nexport const UserLoginRequestAction = (email, password) => {\n  return {\n      type: USER_ACTIONS.USER_LOGIN_REQUESTED_ACTION,\n      email,\n      password\n    }\n};\n\nexport const UseLoginResolveAction = (jwtToken, username) =>{\n  return {\n    type: USER_ACTIONS.USER_LOGIN_RESOLVED_ACTION,\n    jwtToken,\n    username\n  }\n};\n\nexport const UserLoginRejectAction = () =>{\n  return {\n    type: USER_ACTIONS.USER_LOGIN_REJECTED_ACTION\n  }\n}\n\nexport const UserSubscribeRequest = (email, password) => {\n  return {\n    type: USER_ACTIONS.USER_SUBSCRIBE_REQUESTED_ACTION,\n    email,\n    password,\n  }\n}\n\nexport const UserSubscribeResolved = ()=> {\n  return {\n    type: USER_ACTIONS.USER_SUBSCRIBE_RESOLVED_ACTION,\n  }\n}\n\nexport const UserSubscribeRejected = ()=> {\n  return {\n    type: USER_ACTIONS.USER_SUBSCRIBE_REJECTED_ACTION,\n  }\n}\n\nexport const UserRefreshTokenAction = () => ({\n  type: USER_ACTIONS.TOKEN_REFRESH_REQUESTED_ACTION,\n});\n\nexport const UserLogoutRequestAction = () => {\n  return{\n    type: USER_ACTIONS.USER_LOGOUT_REQUEST_ACTION,\n  }\n};","export const HOST = process.env.NODE_ENV === \"production\" ?\n  process.env.REACT_APP_API_HOST_PRODUCTION :\n  process.env.REACT_APP_API_HOST_DEV;\n  ","import axios from 'axios';\nimport {HOST} from \"./host\"\n\nexport const userLogin = (email, password) =>{\n  return axios.post(\n    `${HOST}/api/users/login`,\n    {\n      username: email,\n      password: password\n    }\n  )\n}\n\nexport const userSubscribeService = (email, password) => {\n  return axios.post(\n    `${HOST}/api/users/subscribe`,\n    {\n      username: email,\n      email: email,\n      password: password\n    }\n  )\n}","import { takeLatest, put } from 'redux-saga/effects'\nimport { UserSubscribeRejected, UserSubscribeResolved, USER_ACTIONS } from \"../Actions/UserActions\";\nimport { UseLoginResolveAction, UserLoginRejectAction } from \"../Actions/UserActions\";\nimport {userLogin as userLoginService, userSubscribeService} from '../Services/userService';\n\nfunction * userLogin(action)\n{\n  try{\n    const data = yield userLoginService(action.email, action.password);\n    yield put(UseLoginResolveAction(data.data.token, data.data.username));\n  }\n  catch(e)\n  {\n    yield put(UserLoginRejectAction());\n  }\n}\n\nfunction * userSubscribe(action)\n{\n  try{\n    const result = yield(userSubscribeService(action.email, action.password))\n    yield put(UserSubscribeResolved());\n  }catch(e)\n  {\n    yield put(UserSubscribeRejected())\n  }\n}\n\nexport function* userSagas()\n{\n  yield takeLatest(USER_ACTIONS.USER_LOGIN_REQUESTED_ACTION, userLogin);\n  yield takeLatest(USER_ACTIONS.USER_SUBSCRIBE_REQUESTED_ACTION, userSubscribe);\n}","export const PLAYLIST_ACTIONS = {\n  PLAYLISTS_GET_REQUESTED_ACTION : 'PLAYLISTS_GET_REQUESTED_ACTION',\n  PLAYLISTS_GET_RESOLVED_ACTION : 'PLAYLISTS_GET_RESOLVED_ACTION',\n  PLAYLISTS_GET_REJECTED_ACTION : 'PLAYLISTS_GET_REJECTED_ACTION',\n  ONE_PLAYLIST_GET_REQUESTED_ACTION : 'ONE_PLAYLIST_GET_REQUESTED_ACTION',\n  ONE_PLAYLIST_GET_RESOLVED_ACTION : 'ONE_PLAYLIST_GET_RESOLVED_ACTION',\n  ONE_PLAYLIST_GET_REJECTED_ACTION : 'ONE_PLAYLIST_GET_REJECTED_ACTION',\n  SELECT_SONG_REQUESTED_ACTION : 'SELECT_SONG_REQUESTED_ACTION',\n  SELECT_SONG_RESOLVED_ACTION : 'SELECT_SONG_RESOLVED_ACTION',\n  SELECT_SONG_REJECTED_ACTION : 'SELECT_SONG_REJECTED_ACTION',\n  ALL_SONGS_REQUESTED : 'ALL_SONGS_REQUESTED',\n  ALL_SONGS_RESOLVED : 'ALL_SONGS_RESOLVED',\n  ALL_SONGS_REJECTED: 'ALL_SONGS_REJECTED',\n  ADD_PLAYLIST_REUQESTED : 'ADD_PLAYLIST_REQUESTED',\n  ADD_PLAYLIST_RESOLVED : 'ADD_PLAYLIST_RESOLVED' ,\n  ADD_PAYLIST_REJECTED : 'ADD_PLAYLIST_REJECTED',\n  EDIT_PLAYLIST_NAME_REQUESTED: 'EDIT_PLAYLIST_NAME_REQUESTED',\n  EDIT_PLAYLIST_NAME_RESOLVED : 'EDIT_PLAYLIST_NAME_RESOLVED',\n  EDIT_PLAYLIST_NAME_REJECTED : 'EDIT_PLAYLIST_NAME_REJECTED',\n  REMOVE_PLAYLIST_REQUESTED : 'REMOVE_PLAYLIST_REQUESTED',\n  REMOVE_PLAYLIST_RESOLVED : 'REMOVE_PLAYLIST_RESOLVED',\n  REMOVE_PLAYLIST_REJECTED : 'REMOVE_PLAYLIST_REJECTED',\n  LOAD_SONGS_REQUESTED_ACTION : 'LOAD_SONGS_REQUESTED_ACTION',\n  LOAD_SONGS_RESOLVED_ACTION : 'LOAD_SONGS_RESOLVED_ACTION',\n  LOAD_SONGS_REJECTED_ACTION : 'LOAD_SONGS_REJECTED_ACTION',\n  CLEAR_ALERT_ERROR : 'CLEAR_ALERT_ERROR',\n  CLEAR_STATE_ACTION: 'CLEAR_STATE_ACTION'\n}\n\nexport const getAllPlaylistsRequestAction = () => {\n  return {\n    type: PLAYLIST_ACTIONS.PLAYLISTS_GET_REQUESTED_ACTION\n  }\n}\n\nexport const getAllPlaylistsRejectAction = (error) => {\n  return {\n    type: PLAYLIST_ACTIONS.PLAYLISTS_GET_REJECTED_ACTION,\n    error\n  }\n}\n\nexport const getAllPlaylistsResolveAction = (playlists) => {\n  return {\n    type: PLAYLIST_ACTIONS.PLAYLISTS_GET_RESOLVED_ACTION,\n    playlists\n  }\n}\n\nexport const addPlaylistRequestAction = (title) => {\n  return {\n    type: PLAYLIST_ACTIONS.ADD_PLAYLIST_REUQESTED,\n    title\n   }\n}\n\nexport const clearAlertErrorAction = () => {\n  return {\n    type: PLAYLIST_ACTIONS.CLEAR_ALERT_ERROR\n  }\n}\n\nexport const addPlaylistResolveAction = (playlist) => {\n  return {\n    type: PLAYLIST_ACTIONS.ADD_PLAYLIST_RESOLVED,\n    playlist\n  }\n}\n\nexport const addPlaylistRejectAction = (error) => {\n  return {\n    type: PLAYLIST_ACTIONS.ADD_PAYLIST_REJECTED,\n    error\n  }\n}\n\nexport const getPlaylistRequestAction = (playlistId, token) => {\n\n}\n\nexport const editPlaylistNameRequestAction = (newTitle, id) => {\n  return {\n    type: PLAYLIST_ACTIONS.EDIT_PLAYLIST_NAME_REQUESTED,\n    newTitle,\n    id\n  }\n}\n\nexport const editPlaylistNameRejectedAction = (error) => {\n  return {\n    type: PLAYLIST_ACTIONS.EDIT_PLAYLIST_NAME_REJECTED,\n    error\n  }\n}\n\nexport const editPlaylistNameResolvedAction = (playlist) => {\n  return {\n    type: PLAYLIST_ACTIONS.EDIT_PLAYLIST_NAME_RESOLVED,\n    playlist,\n  }\n}\n\nexport const removePlaylistRequestedAction = (id) => {\n  return {\n    type: PLAYLIST_ACTIONS.REMOVE_PLAYLIST_REQUESTED,\n    id\n  }\n}\n\nexport const removePlaylistResolvedAction = (id) => ({\n  type:PLAYLIST_ACTIONS.REMOVE_PLAYLIST_RESOLVED,\n  id\n})\n\nexport const removePlaylistRejectedAction = (error) => ({\n  type: PLAYLIST_ACTIONS.REMOVE_PLAYLIST_REJECTED,\n  error\n})\n\nexport const loadSongsRequestedAction = (id) => ({\n  type: PLAYLIST_ACTIONS.LOAD_SONGS_REQUESTED_ACTION,\n  id\n})\n\nexport const selectSongResolveAction = (song) => {\n  return {\n    type: PLAYLIST_ACTIONS.SELECT_SONG_RESOLVED_ACTION,\n    song\n  }\n}\n\nexport const selectSongRejectedAction = (error) => ({\n  type: PLAYLIST_ACTIONS.SELECT_SONG_REJECTED_ACTION,\n  error\n})\n  \nexport const setSelectedSong = (id, title) => {\n  return {\n    type: PLAYLIST_ACTIONS.SELECT_SONG_REQUESTED_ACTION,\n    id,\n    title\n  }\n}\n\nexport const clearPlaylistAction = () =>{\n  return {\n    type: PLAYLIST_ACTIONS.CLEAR_STATE_ACTION\n  }\n}","import axios from 'axios';\nimport {HOST} from \"./host\"\n\nexport const getPlaylists = (token) =>{\n  return axios.get(\n    `${HOST}/api/playlists`,\n    { \n      \"headers\" :\n      {\n        \"Authorization\" : `Bearer ${token}`\n      }\n    }\n  )\n}\n\nexport const addNewPlaylistService = (title, token) =>{\n  return axios.post(\n    `${HOST}/api/playlists`,\n    {\n      \"title\" : title\n    },\n    {\n      \"headers\":\n      {\n        \"Authorization\" : `Bearer ${token}`\n      }\n    }\n  )\n}\n\nexport const editPlaylistTitleService = (newTitle, id, token) => {\n  return axios.put(\n    `${HOST}/api/playlists`,\n    {\n      id,\n      newTitle\n    },\n    {\n      \"headers\":\n      {\n        \"Authorization\" : `Bearer ${token}`\n      }\n    }\n  )\n}\n\nexport const removePlaylistService = (id, token) => {\n  return axios.delete(\n    `${HOST}/api/playlists/${id}`,\n    {\n      \"headers\":\n      {\n        \"Authorization\" : `Bearer ${token}`\n      }\n    }\n  )\n}","export const loginRequestedSelector = state => state.user.isLoading;\n\nexport const userLoggedInSelector = state => state.user.isLoggedIn;\n\nexport const jwtTokenSelector = state => state.user.jwtToken;","import {takeLatest, put, select} from 'redux-saga/effects';\nimport { PLAYLIST_ACTIONS, getAllPlaylistsRejectAction, getAllPlaylistsResolveAction, addPlaylistResolveAction, addPlaylistRejectAction, editPlaylistNameRejectedAction, editPlaylistNameResolvedAction, removePlaylistResolvedAction, removePlaylistRejectedAction } from \"../Actions/PlaylistActions\";\nimport {getPlaylists as getAllPlaylists, addNewPlaylistService, editPlaylistTitleService, removePlaylistService} from '../Services/playlistService';\nimport { jwtTokenSelector } from '../Selectors/userSelector';\n\nfunction* getPlaylists(action)\n{\n  const jwtToken = yield select(jwtTokenSelector);\n  try\n  {\n    const playlists = yield getAllPlaylists(jwtToken);\n    yield put(getAllPlaylistsResolveAction(playlists.data));\n  }\n  catch(e)\n  {\n    yield put(getAllPlaylistsRejectAction(\"error_message\"));\n  }\n}\n\nfunction * addPlaylist(action)\n{\n  const jwtToken = yield select(jwtTokenSelector);\n  try\n  {\n    const playlist = yield addNewPlaylistService(action.title, jwtToken);\n    yield put(addPlaylistResolveAction(playlist.data))\n  }\n  catch(e)\n  {\n    yield put(addPlaylistRejectAction(\"error while adding new playlist\"));\n  }\n}\n\nfunction * editPlaylist(action)\n{\n  const jwtToken = yield select(jwtTokenSelector);\n  try\n  {\n    const playlist = yield editPlaylistTitleService(action.newTitle, action.id, jwtToken);\n    yield put(editPlaylistNameResolvedAction(playlist.data));\n  }\n  catch(e)\n  {\n    yield put(editPlaylistNameRejectedAction(\"error while editing the title\"));\n  }\n}\n\nfunction * removePlaylist(action)\n{\n  const jwtToken = yield select(jwtTokenSelector);\n  try\n  {\n    let result = yield removePlaylistService(action.id, jwtToken);\n    yield put(removePlaylistResolvedAction(result.data.playlistId));\n  }\n  catch(e)\n  {\n    yield put(removePlaylistRejectedAction(\"error while removing the playlist\"));\n  }\n}\n\nexport function* playlistSagas()\n{\n  yield takeLatest(PLAYLIST_ACTIONS.PLAYLISTS_GET_REQUESTED_ACTION, getPlaylists);\n  yield takeLatest(PLAYLIST_ACTIONS.ADD_PLAYLIST_REUQESTED, addPlaylist);\n  yield takeLatest(PLAYLIST_ACTIONS.EDIT_PLAYLIST_NAME_REQUESTED, editPlaylist);\n  yield takeLatest(PLAYLIST_ACTIONS.REMOVE_PLAYLIST_REQUESTED, removePlaylist);\n}\n","export const PLAYER_ACTIONS = {\n  PLAY: 'PLAY',\n  PAUSE: 'PAUSE',\n  DURATION : 'DURATION',\n  END: 'END',\n  CLEAR_PLAYER : 'CLEAR_PLAYER'\n}\n\nexport const playAction= ()=>{\n  return {\n    type: PLAYER_ACTIONS.PLAY,\n  }\n}\n\nexport const pauseAction = ()=>{\n  return {\n    type: PLAYER_ACTIONS.PAUSE,\n  }\n}\n\nexport const songEndedAction = ()=>{\n  return {\n    type:PLAYER_ACTIONS.END\n  }\n}\n\nexport const setDurationAction = (seconds)=>{\n  return {\n    type: PLAYER_ACTIONS.DURATION,\n    duration : seconds\n  }\n}\n\nexport const clearPlayerAction = () => {\n  return {\n    type: PLAYER_ACTIONS.CLEAR_PLAYER\n  }\n}","export const SONG_ACTIONS = {\n  SONG_ADD_REQUESTED_ACTION : 'SONG_ADD_REQUESTED_ACTION',\n  SONG_ADD_RESOLVED_ACTION : 'SONG_ADD_RESOLVED_ACTION',\n  SONG_ADD_REJECTED_ACTION : 'SONG_ADD_REJECTED_ACTION',\n  SONG_REMOVE_REQUESTED_ACTION : 'SONG_REMOVE_REQUESTED_ACTION',\n  SONG_REMOVE_RESOLVED_ACTION: 'SONG_REMOVE_RESOLVED_ACTION',\n  SONG_REMOVE_REJECTED_ACTON: 'SONG_REMOVE_REJECTED_ACTIONS',\n  SONG_EDIT_REQUESTED_ACTION : 'SONG_EDIT_REQUESTED_ACTION',\n  SONG_EDIT_RESOLVED_ACTON: 'SONG_EDIT_RESOLVED_ACTIONS',\n  SONG_EDIT_REJECTED_ACTON: 'SONG_EDIT_REJECTED_ACTIONS',\n  SELECT_NEXT_REQUESTED_ACTION : 'SELECT_NEXT_REQUESTED_ACTION',\n  SELECT_NEXT_RESOLVED_ACTION : 'SELECT_NEXT_RESOLVED_ACTION',\n  SELECT_NEXT_REJECTED_ACTION : 'SELECT_NEXT_REJECTED_ACTION',\n  SELECT_PREVIOUS_REQUESTED_ACTION : 'SELECT_PREVIOUS_REQUESTED_ACTION',\n  SELECT_PREVIOUS_RESOLVED_ACTION : 'SELECT_PREVIOUS_RESOLVED_ACTION',\n  SELECT_PREVIOUS_REJECTED_ACTION : 'SELECT_PREVIOUS_REJECTED_ACTION',\n}\n\nexport const addSongRequestAction = (title, playlistId, bytes) => {\n  return {\n    type: SONG_ACTIONS.SONG_ADD_REQUESTED_ACTION,\n    title,\n    playlistId,\n    bytes\n  }\n}\n\nexport const addSongRejectAction = (error) => {\n  return {\n    type: SONG_ACTIONS.SONG_ADD_REJECTED_ACTION,\n    error\n  }\n}\n\nexport const addSongResolveAction = (newSong) => {\n  \n  return {\n    type: SONG_ACTIONS.SONG_ADD_RESOLVED_ACTION,\n    newSong\n  }\n}\n\nexport const editSongRequestAction = (title, songId, bytes) => {\n  return {\n    type: SONG_ACTIONS.SONG_EDIT_REQUESTED_ACTION,\n    title,\n    songId,\n    bytes\n  }\n}\n\nexport const editSongRejectAction = (error) => {\n  return {\n    type: SONG_ACTIONS.SONG_EDIT_REJECTED_ACTION,\n    error\n  }\n}\n\nexport const editSongResolveAction = () => {\n  return {\n    type: SONG_ACTIONS.SONG_EDIT_RESOLVED_ACTION,\n  }\n}\n\nexport const removeSongRequestAction = (songId, playlistId) => {\n  return {\n    type: SONG_ACTIONS.SONG_REMOVE_REQUESTED_ACTION,\n    songId,\n    playlistId\n  }\n}\n\nexport const removeSongRejectAction = (error) => {\n  return {\n    type: SONG_ACTIONS.SONG_REMOVE_REJECTED_ACTION,\n    error\n  }\n}\n\nexport const removeSongResolveAction = (songId) => {\n  return {\n    type: SONG_ACTIONS.SONG_REMOVE_RESOLVED_ACTION,\n    songId\n  }\n}\n\nexport const selectNextRequestAction = (id, title) => {\n  return {\n    type: SONG_ACTIONS.SELECT_NEXT_REQUESTED_ACTION,\n    id,\n    title\n  }\n}\n\nexport const selectNextResolveAction = (song) => {\n  return {\n    type: SONG_ACTIONS.SELECT_NEXT_RESOLVED_ACTION,\n    song,\n  }\n}\n\nexport const selectNextRejectAction = () => {\n  return {\n    type: SONG_ACTIONS.SELECT_NEXT_REJECTED_ACTION,\n  }\n}\n\nexport const selectPreviousRequestAction = (id, title) => {\n  return {\n    type: SONG_ACTIONS.SELECT_PREVIOUS_REQUESTED_ACTION,\n    id,\n    title\n  }\n}\n\nexport const selectPreviousResolveAction = (song) => {\n  return {\n    type: SONG_ACTIONS.SELECT_PREVIOUS_RESOLVED_ACTION,\n    song,\n  }\n}\n\nexport const selectPreviousRejectAction = () => {\n  return {\n    type: SONG_ACTIONS.SELECT_PREVIOUS_REJECTED_ACTION,\n  }\n}","import axios from 'axios';\nimport {HOST} from \"./host\"\n\nexport const fetchSongService = (id, token) => {\n  return axios.get(\n    `${HOST}/api/Song/${id}`,\n    {\n      \"headers\":\n      {\n        \"Authorization\" : `Bearer ${token}`\n      }\n    }\n  )\n}\n\nexport const removeSongService = (songId, playlistId, token) => {\n  return axios.delete(\n    `${HOST}/api/Song`,\n    {\n      data: \n      {\n        playlistId,\n        songId\n      },\n      headers:\n      {\n        \"Authorization\" : `Bearer ${token}`\n      }\n    \n    });\n}\n\nexport const addSongService = (title, playlistId, bytes, token) => {\n\n  let formData = new FormData();\n  formData.append(\"SongBytes\", bytes);\n  formData.append(\"PlaylistId\", playlistId);\n  formData.append(\"SongTitle\", title);\n\n  return axios.post(\n    `${HOST}/api/Song`,\n    formData,\n    {\n      headers:\n      {\n        \"Authorization\" : `Bearer ${token}`,\n        'Content-Type': `multipart/form-data`\n      }\n    }\n  )\n}","import { takeLatest, select, put } from \"redux-saga/effects\";\nimport { PLAYLIST_ACTIONS, selectSongResolveAction, selectSongRejectedAction, SONG_ACTIONS, removeSongResolveAction, addSongResolveAction } from \"../Actions\";\nimport { jwtTokenSelector } from \"../Selectors/userSelector\";\nimport { addSongService, fetchSongService, removeSongService } from \"../Services/songService\";\n\n\nfunction * select_song(action)\n{\n  const jwtToken = yield select(jwtTokenSelector);\n  try\n  {\n    const result = yield fetchSongService(action.id, jwtToken);\n\n    const base64 = result.data.fileContents;\n    const songBytes = base64ToArrayBuffer(base64);\n    const blob = new Blob([songBytes], {type:'audio/mp3'});\n    const url = window.URL.createObjectURL(blob)\n\n    const song = {songTitle : action.title, link: url, id: action.id };\n\n    yield put(selectSongResolveAction(song));\n  }\n  catch(e)\n  {\n    yield put(selectSongRejectedAction(\"error while selecting song\"));\n  }\n}\n\nfunction * uploadSong(action)\n{\n  const jwtToken = yield select(jwtTokenSelector);\n  try \n  {\n    \n    const result = yield addSongService(action.title, action.playlistId, action.bytes, jwtToken);\n    let newSong = result.data;\n    yield put(addSongResolveAction(newSong))\n    \n  }\n  catch (e)\n  {\n\n  }\n}\n\nfunction * removeSong(action) {\n  const jwtToken = yield select(jwtTokenSelector);\n  try \n  {\n    const result = yield removeSongService( action.songId, action.playlistId, jwtToken);\n    yield put(removeSongResolveAction(action.songId));\n\n  }\n  catch (e)\n  {\n\n  }\n}\n\nfunction base64ToArrayBuffer(base64) {\n\n  var binaryString = window.atob(base64);\n  var binaryLen = binaryString.length;\n  var bytes = new Uint8Array(binaryLen);\n  for (var i = 0; i < binaryLen; i++) {\n     var ascii = binaryString.charCodeAt(i);\n     bytes[i] = ascii;\n  }\n\n  return bytes;\n}\n\nexport function* songSagas()\n{\n  yield takeLatest(PLAYLIST_ACTIONS.SELECT_SONG_REQUESTED_ACTION, select_song);\n  yield takeLatest(SONG_ACTIONS.SONG_ADD_REQUESTED_ACTION, uploadSong);\n  yield takeLatest(SONG_ACTIONS.SONG_REMOVE_REQUESTED_ACTION, removeSong);\n  yield takeLatest(SONG_ACTIONS.SELECT_NEXT_REQUESTED_ACTION, select_song);\n  \n}","import { all } from 'redux-saga/effects';\nimport { userSagas } from './userSagas';\nimport {playlistSagas} from './playlistSagas';\nimport {songSagas} from './songSagas';\n\nexport default function* rootSaga() {\n  yield all([\n    userSagas(),\n    playlistSagas(),\n    songSagas(),\n  ]);\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport playerReducer from './PlayerReducer';\nimport playlistReducer from './PlaylistReducer'\nimport userReducer from './UserReducer';\n\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  player: playerReducer,\n  playlist : playlistReducer,\n  user: userReducer\n});","import {PLAYER_ACTIONS} from '../Actions'\n\nconst initialPlayerState = {\n  song: '',\n  playing: false,\n  duration: 0,\n  ended: true,\n}\n\nconst playerReducer = (state = initialPlayerState, action) =>{\n  switch (action.type) {\n    case PLAYER_ACTIONS.PLAY :{\n      return {\n        ...state,\n        playing: !state.playing,\n        ended: false,\n      }\n    }\n    case PLAYER_ACTIONS.PAUSE:{\n      return{\n        ...state,\n        playing: !state.playing,\n      }\n    }\n    case PLAYER_ACTIONS.DURATION:{\n      return{\n        ...state,\n        duration:action.duration\n      }\n    }\n    case PLAYER_ACTIONS.END:{\n      return {\n        ...state,\n        ended: true,\n      }\n    }\n    case PLAYER_ACTIONS.CLEAR_PLAYER:{\n      return initialPlayerState;\n    }\n    default:{\n      return state;\n    }\n  }\n}\nexport default playerReducer;","import { PLAYLIST_ACTIONS, SONG_ACTIONS } from '../Actions'\n\nconst initialPlaylistState = {\n  songs: [],\n  playlists: [],\n  playlistsLoading: false,\n  playlistError: null,\n  selectedSong: null,\n  nextSongId: null,\n  previousSongId: null,\n  selectedPlaylist: null,\n  songIsLoading: false,\n  playlistAlertContent: null,\n}\n\nconst playlistReducer = (state = initialPlaylistState, action) => {\n  switch (action.type) {\n    case PLAYLIST_ACTIONS.SELECT_SONG_REQUESTED_ACTION: {\n      return {\n        ...state,\n        songIsLoading: true,\n        selectedSong: null,\n      };\n    }\n    case PLAYLIST_ACTIONS.SELECT_SONG_RESOLVED_ACTION: {\n\n      const song_idx = state.songs.map((song) => { return song.songId; }).indexOf(action.song.id);\n      const next_idx = song_idx === state.songs.length - 1 ? null : state.songs.length === 1 ? null : song_idx + 1;\n      const previous_idx = song_idx === 0 ? null : state.songs.length === 1 ? null : song_idx - 1;\n\n      const nextSong = next_idx === null ? null : state.songs.find((song, idx) => idx === next_idx);\n      const previousSong = previous_idx === null ? null : state.songs.find((song, idx) => idx === previous_idx);\n\n      return {\n        ...state,\n        songIsLoading: false,\n        selectedSong: action.song,\n        nextSong: nextSong,\n        previousSong: previousSong,\n      }\n    }\n    case PLAYLIST_ACTIONS.PLAYLISTS_GET_REQUESTED_ACTION: {\n      return {\n        ...state,\n        playlistsLoading: true\n      }\n    }\n    case PLAYLIST_ACTIONS.PLAYLISTS_GET_RESOLVED_ACTION: {\n      return {\n        ...state,\n        playlists: action.playlists,\n        playlistsLoading: false,\n        playlistError: null,\n      }\n    }\n    case PLAYLIST_ACTIONS.PLAYLISTS_GET_REJECTED_ACTION: {\n      return {\n        ...state,\n        playlistsLoading: false,\n        playlistError: action.error,\n        playlists: []\n      }\n    }\n    case PLAYLIST_ACTIONS.ADD_PLAYLIST_REUQESTED: {\n      return {\n        ...state,\n        playlistAlertContent: null\n      }\n    }\n    case PLAYLIST_ACTIONS.ADD_PLAYLIST_RESOLVED: {\n      return {\n        ...state,\n        playlists: [...state.playlists, action.playlist],\n        playlistAlertContent: null\n      }\n    }\n    case PLAYLIST_ACTIONS.ADD_PAYLIST_REJECTED: {\n      return {\n        ...state,\n        playlistAlertContent: action.error\n      }\n    }\n    case PLAYLIST_ACTIONS.REMOVE_PLAYLIST_REJECTED: {\n      return {\n        ...state,\n        playlistAlertContent: action.error\n      }\n    }\n    case PLAYLIST_ACTIONS.CLEAR_ALERT_ERROR: {\n      return {\n        ...state,\n        playlistAlertContent: null,\n      }\n    }\n    case PLAYLIST_ACTIONS.EDIT_PLAYLIST_NAME_RESOLVED: {\n      return {\n        ...state,\n        playlists: state.playlists.map((playlist) => {\n          playlist.title = playlist.id === action.playlist.songId ? action.playlist.newTitle : playlist.title;\n          return playlist;\n        }),\n      }\n    }\n    case PLAYLIST_ACTIONS.EDIT_PLAYLIST_NAME_REJECTED: {\n      return {\n        ...state,\n        playlistAlertContent: action.error\n      }\n    }\n    case PLAYLIST_ACTIONS.REMOVE_PLAYLIST_RESOLVED: {\n      return {\n        ...state,\n        playlists: state.playlists.filter((item) => (item.id !== action.id))\n      }\n    }\n    case PLAYLIST_ACTIONS.LOAD_SONGS_REQUESTED_ACTION: {\n      const selectedPlaylist = state.playlists.find((list) => list.id === action.id);\n      return {\n        ...state,\n        songs: selectedPlaylist.songs,\n        selectedPlaylist: action.id,\n        selectedSong: null,\n        nextSong: null,\n        previousSong: null,\n      }\n    }\n    case SONG_ACTIONS.SONG_REMOVE_RESOLVED_ACTION: {\n      return {\n        ...state,\n        songs: state.songs.filter((item) => (item.songId !== action.songId)),\n        selectedSong: null\n      }\n    }\n    case SONG_ACTIONS.SONG_ADD_RESOLVED_ACTION: {\n      let new_song = { songId: action.newSong.songId, songTitle: action.newSong.songTitle }\n      return {\n        ...state,\n        songs: [...state.songs, new_song]\n      }\n    }\n    case PLAYLIST_ACTIONS.CLEAR_STATE_ACTION:{\n      return initialPlaylistState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\nexport default playlistReducer;","import {USER_ACTIONS} from '../Actions/UserActions';\n\nconst initialState = {\n  isLoggedIn: false,\n  isLoading: false,\n  jwtToken: 'foo',\n  username: ''\n}\n\nconst userReducer = (state = initialState, action)=> {\n  \n  switch(action.type){\n    case (USER_ACTIONS.USER_LOGIN_REQUESTED_ACTION):{\n      return{\n        ...state,\n        isLoading : true,\n      }\n    }\n    case (USER_ACTIONS.USER_LOGIN_RESOLVED_ACTION):{\n      return{\n        ...state,\n        isLoading : false,\n        jwtToken : action.jwtToken,\n        username : action.username,\n        isLoggedIn : true,\n      }\n    }\n    case (USER_ACTIONS.USER_LOGIN_REJECTED_ACTION):{\n      return {\n        initialState\n      }\n    }\n    case (USER_ACTIONS.USER_LOGOUT_REQUEST_ACTION):{\n      return {\n        initialState\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;","import { createBrowserHistory } from 'history';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, createStore } from 'redux';\nimport {routerMiddleware} from 'connected-react-router';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootSaga from './Sagas';\nimport storage from 'redux-persist/lib/storage'\nimport createRootReducer from './Reducers';\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst persistConfig = {\n  key: 'rootPlaylists',\n  storage\n}\nconst middleware = [sagaMiddleware, routerMiddleware(history)];\n\nconst persistedReducer = persistReducer(persistConfig, createRootReducer(history));\n\n\nexport default () => {\n  let store = createStore(persistedReducer,\n    composeEnhancers(applyMiddleware(...middleware),));\n\n  let persistor = persistStore(store);\n\n  sagaMiddleware.run(rootSaga)\n\n  return { store, persistor };\n}","import React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useDispatch } from 'react-redux';\nimport { UserLogoutRequestAction } from '../../Actions/UserActions';\nimport { clearPlayerAction } from '../../Actions/PlayerActions';\nimport { clearPlaylistAction } from '../../Actions/PlaylistActions';\n\nconst ExitButton = () =>{\n  const dispatch = useDispatch();\n  \n  const logOut = () => {\n    dispatch(clearPlayerAction());\n    dispatch(clearPlaylistAction());\n    dispatch(UserLogoutRequestAction());\n  }\n\n  return <IconButton variant=\"contained\" onClick={logOut}>\n    <ExitToAppIcon />\n  </IconButton>\n  \n}\nexport default ExitButton;","import React from 'react'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core';\nimport ExitButton from '../Header/ExitButton';\nimport { useSelector } from 'react-redux';\nimport { userLoggedInSelector } from '../../Selectors/userSelector';\nconst useStyles= makeStyles(theme=> ({\n  grow:{\n    flexGrow: 1,\n  },\n  appBar:{\n    padding: theme.spacing(2),\n  },\n  title:{\n    flexGrow: 1\n  }\n}))\n\nconst Header = () =>{\n  const classes = useStyles();\n  const userIsLoggedIn = useSelector(userLoggedInSelector);\n  \n  return <div className={classes.grow}>\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Playlists\n        </Typography>\n        {userIsLoggedIn && <ExitButton />}\n      </Toolbar>\n    </AppBar>\n  </div>\n}\n\nexport default Header;","export const playerIsPlayingSelector = state => state.player.playing;\n\nexport const durationSelector = state => state.player.duration;\n\nexport const songEndedSelector = state => state.player.ended;","import React, { useState, useEffect } from 'react'\nimport { makeStyles, LinearProgress } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { durationSelector, playerIsPlayingSelector } from '../../Selectors/playerSelector';\nimport { pauseAction } from '../../Actions';\nconst useStyles = makeStyles(theme=>({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}))\nconst SongProgress = ()=>{\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [completed, setCompleted] = useState(0);\n\n  const songDuration = useSelector(durationSelector);\n  const songPlaying = useSelector(playerIsPlayingSelector);\n  \n  useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          dispatch(pauseAction());\n          return 0;\n        }\n        \n        const diff = 10/songDuration;\n        return Math.min(oldCompleted + (songPlaying? diff : 0), 100);\n      });\n    }\n\n    const timer = setInterval(progress, songPlaying? 100:null);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [songDuration,songPlaying,dispatch]);\n\n  return <>\n    <div className={classes.root}>\n      <LinearProgress variant=\"determinate\" value={completed} />\n    </div>\n  </>\n}\n\nexport default SongProgress;","export const songsSelector = state => state.playlist.songs;\n\nexport const selectedSongSelector = state => state.playlist.selectedSong;\n\nexport const selectedPlaylistSelector = state => state.playlist.selectedPlaylist;\n\nexport const playlistsSelector = state => state.playlist.playlists;\n\nexport const playlistsLoadingSelector = state => state.playlist.playlistsLoading;\n\nexport const playlistsErrorSelector = state => state.playlist.playlistError;\n\nexport const playlistAddErrorSelector = state => state.playlist.playlistAddError;\n\nexport const playlistEditErrorSelector = state => state.playlist.playlistEditError;\n\nexport const playlistAlertSelector = state => state.playlist.playlistAlertContent;\n\nexport const songIsLoadingSelector = state => state.playlist.songIsLoading;\n\nexport const nextSongSelector = state => state.playlist.nextSong;\n\nexport const previousSongSelector = state => state.playlist.previousSong;","import React from 'react'\nimport SongProgress from './SongProgress';\nimport { Chip, makeStyles } from '@material-ui/core';\nimport { selectedPlaylistSelector, selectedSongSelector } from '../../Selectors/playlistSelector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeSongRequestAction } from '../../Actions';\n\n\nconst useStyles = makeStyles(theme=>({\n  root:{\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  chipsSpacing:{\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  }\n\n}))\n\nconst SongInfo = ()=>{\n  const classes = useStyles();\n  const selectedSong = useSelector(selectedSongSelector);\n  const selectedPlaylist = useSelector(selectedPlaylistSelector);\n  const dispatch = useDispatch();\n\n  const handleDelete =()=>{\n    dispatch(removeSongRequestAction(selectedSong.id, selectedPlaylist));\n  }\n\n  const showSongDetails =()=>{\n    return <div className={classes.root}>\n      <Chip label={\"Title : \"+selectedSong.songTitle} className = {classes.chipsSpacing}/>\n      {/* <Chip label={\"Duration : \"+selectedSong.LengthInSeconds} className = {classes.chipsSpacing}/> */}\n      {/* need to replace the following line with a new component called delete song */}\n      <Chip label=\"Delete\" onDelete={handleDelete} className = {classes.chipsSpacing}/>\n    </div>\n  }\n  \n  return <>\n  {!selectedSong && \"You need to select a song first\"}\n  {selectedSong && showSongDetails()}\n  \n\n  {/* TODO: fix it <SongProgress/> */}\n  </>\n}\n\nexport default SongInfo;","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {playAction} from '../../Actions'\nimport { selectedSongSelector } from '../../Selectors/playlistSelector';\nconst Play = ()=>{\n  \n  const dispatch = useDispatch();\n  const selectedSong = useSelector(selectedSongSelector);\n\n  const play=()=>{\n    dispatch(playAction());\n  }\n  return <>\n  <Button fullWidth disabled={selectedSong === null} variant=\"contained\" color=\"secondary\" disableElevation onClick={play}>\n    <PlayArrowIcon/>\n  </Button>\n  </>\n}\n\nexport default Play;","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport PauseIcon from '@material-ui/icons/Pause';\nimport { useDispatch } from 'react-redux';\nimport { pauseAction } from '../../Actions';\n\nconst Pause = ( )=>{\n  \n  const dispatch = useDispatch();\n\n  const pause = ()=>{\n    dispatch(pauseAction());\n  }\n  return<>\n  <Button fullWidth variant=\"contained\" color=\"secondary\" disableElevation onClick={pause}>\n    <PauseIcon/>\n  </Button>\n  </>\n}\n\nexport default Pause;","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedSong } from '../../Actions';\nimport { previousSongSelector } from '../../Selectors/playlistSelector';\n\nconst Previous = () =>{\n\n  const dispatch = useDispatch();\n  const previous = useSelector(previousSongSelector)\n\n  const selectPreviousSong = () =>{\n    dispatch(setSelectedSong(previous.songId, previous.songTitle));\n  }\n\n  return <>\n  <Button fullWidth disabled={previous === null} onClick={selectPreviousSong} variant=\"contained\" color=\"secondary\" disableElevation>\n    <SkipPreviousIcon/>\n  </Button>\n  </>\n}\n\nexport default Previous;","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedSong } from '../../Actions';\nimport { nextSongSelector } from '../../Selectors/playlistSelector';\n\nconst Next = () =>{\n  \n  const dispatch = useDispatch();\n  const next = useSelector(nextSongSelector)\n\n  const selectNextSong = () =>{\n    dispatch(setSelectedSong(next.songId, next.songTitle));\n  }\n\n  return<>\n  <Button fullWidth disabled={next === null} onClick={selectNextSong} variant=\"contained\" color=\"secondary\" disableElevation >\n    <SkipNextIcon />\n  </Button>\n  </>\n}\n\nexport default Next;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Play from './Play';\nimport Pause from './Pause';\nimport Previous from './Previous';\nimport Next from './Next';\n\nconst PlayerControls = ({songIsPlaying}) => {\n  return <Grid container\n    direction=\"row\"\n  >\n    <Grid item xs={4}>\n      <Previous />\n    </Grid>\n    <Grid item xs={4}>\n      {songIsPlaying ? <Pause /> : <Play />}\n    </Grid>\n    <Grid item xs={4}>\n      <Next />\n    </Grid>\n  </Grid>\n}\n\nexport default PlayerControls;","import React, { useEffect } from 'react'\nimport { LinearProgress, Grid } from '@material-ui/core'\nimport SongInfo from './SongInfo';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { playerIsPlayingSelector } from '../../Selectors/playerSelector';\nimport { setDurationAction } from '../../Actions';\nimport { selectedSongSelector, songIsLoadingSelector } from '../../Selectors/playlistSelector';\nimport PlayerControls from './PlayerControls';\n\n\nconst Player = () => {\n  const dispatch = useDispatch();\n  const selectedSong = useSelector(selectedSongSelector);\n  const songIsLoading = useSelector(songIsLoadingSelector);\n\n  const audio = new Audio(selectedSong === null ? \"\" : selectedSong.link);\n  // dispatch(setDurationAction(selectedSong === null ? 0 :audio.duration));\n  const songIsPlaying = useSelector(playerIsPlayingSelector);\n\n  useEffect(() => {\n\n    if (songIsPlaying) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n\n    return () => {\n      audio.pause();\n    };\n  }, [songIsPlaying, audio, dispatch])\n\n  return <>\n    <Grid container>\n      <Grid item xs={12}>\n        {songIsLoading && <LinearProgress />}\n        {!songIsLoading && <SongInfo />}\n      </Grid>\n      <Grid item xs={12}>\n        <PlayerControls songIsPlaying={songIsPlaying}/>\n      </Grid>\n    </Grid>\n  </>\n}\nexport default Player;","import React, { useState } from 'react'\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addSongRequestAction } from '../../../Actions/SongActions';\nimport { selectedPlaylistSelector } from '../../../Selectors/playlistSelector';\n\n\nconst AddSongDialog = ({open, dialogTitle, fnAccept = () => {}, fnReject = () => {} }) =>{\n\n  const dispatch = useDispatch();\n  const selectedPlaylist = useSelector(selectedPlaylistSelector);\n\n  const [title, setTitle] = useState(\"\");\n  const [songBytes, setSongBytes] = useState();\n\n  const onAccept = (title) =>{\n    dispatch(addSongRequestAction(title, selectedPlaylist, songBytes));\n    fnReject();\n  }\n\n  const loadSong = (evt) =>{\n    \n    let song = evt.target.files[0];\n    \n    setTitle(song.name);\n\n    let reader = new FileReader();\n\n    reader.onloadend = (evt) => {\n      if (evt.target.readyState === FileReader.DONE) {\n\n        setSongBytes(song);\n        \n      }\n    };\n\n    reader.readAsBinaryString(song);\n  }\n\n\n  return <>\n    <Dialog open={open} fullWidth>\n      <DialogTitle>{dialogTitle}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          fullWidth\n          value={title}\n          onChange={(evt) => setTitle(evt.target.value)}\n        />\n        <Button varint=\"contained\">\n          <input type=\"file\" id=\"songFile\" multiple onChange={(evt) => loadSong(evt) }\n          />\n        </Button>\n        <DialogActions>\n          <Button onClick={fnReject}>\n            CANCEL\n          </Button>\n          <Button onClick={() => onAccept(title)}>\n            SUBMIT\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n    \n  </>\n}\n\nexport default AddSongDialog;","import React, { useState } from 'react'\nimport { Button, makeStyles } from '@material-ui/core'\nimport AddSongDialog from './AddSong/AddSongDialog';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // marginTop: theme.spacing(2),\n  }\n}))\nconst AddNewSong = () => {\n  const classes = useStyles();\n\n  const [openForm, setOpenForm] = useState(false);\n\n  const handleAddNewSong = () => {\n    setOpenForm(!openForm);\n  }\n\n  const setCloseForm = () => {\n    setOpenForm(false);\n  }\n\n  const handleRejectAddSong = () => {\n\n    setOpenForm(false);\n  }\n\n  return <>\n    <Button className={classes.root} fullWidth variant=\"contained\" color=\"secondary\" onClick={handleAddNewSong}>\n      Add new song\n    </Button>\n    <AddSongDialog open={openForm} dialogTitle=\"Add new song\" fnAccept={setCloseForm} fnReject={handleRejectAddSong} />\n  </>\n}\n\nexport default AddNewSong;","import { List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../Actions';\nimport { setSelectedSong } from '../../Actions';\nimport { songsSelector } from '../../Selectors/playlistSelector';\n\nconst useStyles = makeStyles(theme=>({\n  root:{\n    overflowY: \"scroll\",\n  },\n  backgroundLight:{\n    backgroundColor: \"#CDE7BE\"\n  },\n  backgroundDark:{\n    backgroundColor: \"#bae8a0\"\n  }\n}))\n\nconst SongsOfPlaylist = ()=>{\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const playlist = useSelector(songsSelector)\n\n  const handleSongSelect = (id, title) =>{\n    dispatch(setSelectedSong(id, title));\n  }\n\n  if(!playlist)\n  {\n    return <>Select a playlist to load songs</>\n  }\n\n  if(playlist.length === 0)\n  {\n    return <>The list is empty, add some tracks</>\n  }\n\n  return <>\n    <List className={classes.root}>\n      {playlist.map((x, idx) => {\n        return (\n          <ListItem key={x.songId}  onClick={() => handleSongSelect(x.songId, x.songTitle)} button className={idx %2 ===0 ? classes.backgroundDark : classes.backgroundLight}>\n            <ListItemText primary={`${x.songTitle}`}/>\n          </ListItem>\n        )\n      })}\n    </List>\n  </>\n}\n\nexport default SongsOfPlaylist;","import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport AddNewSong from './AddNewSong';\nimport SongsOfPlaylist from './SongsOfPlaylist';\n\nconst Playlist = ()=>{\n\n  return<Grid container>\n    <Grid item xs={12}>\n      <SongsOfPlaylist/>\n    </Grid>\n    <Grid item xs={12}>\n      <AddNewSong/>    \n    </Grid>\n  </Grid>\n}\n\nexport default Playlist;","import React from 'react'\nimport { Paper, makeStyles, Typography, Grid } from '@material-ui/core';\nimport Player from '../Player/Player';\nimport Playlist from './Playlist';\n\nconst useStyles = makeStyles(theme=>({\n  \n  paper:{\n    padding: theme.spacing(2),\n  }\n}))\n\nconst CurrentPlaylist = () =>{\n  const classes = useStyles();\n  return<div>\n    <Paper className={classes.paper}>\n      <Typography variant=\"h5\">\n        Current Playlist\n      </Typography>\n      <Grid container>\n        <Grid item xs={12}>\n          <Playlist/>\n        </Grid>\n        <Grid item xs={12}>\n          <Player/>\n        </Grid>\n      </Grid>\n    </Paper>\n  </div>\n}\n\nexport default CurrentPlaylist;","import React, { useState } from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button } from '@material-ui/core'\n\nconst AddPlaylistDialog = ({ dialogTitle = \"Title\",\n  context = \"Please fill the title\",\n  open,\n  onReject = () => {\n    //  foo\n  },\n  onAccept = (title) => {\n    // foo\n  },\n  defaultTitle = \"\"\n}) => {\n\n  const [title, setTitle] = useState(defaultTitle);\n\n  return <>\n    <Dialog open={open} fullWidth>\n      <DialogTitle>{dialogTitle}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {context}\n        </DialogContentText>\n        <TextField\n          autoFocus\n          fullWidth\n          value={title}\n          onChange={(evt) => setTitle(evt.target.value)}\n        />\n        <DialogActions>\n          <Button onClick={onReject}>\n            CANCEL\n          </Button>\n          <Button onClick={() => onAccept(title)}>\n            SUBMIT\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  </>\n}\n\nexport default AddPlaylistDialog;","import React, { useState } from 'react'\nimport { Button } from '@material-ui/core'\nimport AddPlaylistDialog from './AddPlaylist/AddPlaylistDialog';\nimport { useDispatch } from 'react-redux';\nimport { addPlaylistRequestAction } from '../../Actions/PlaylistActions';\n\n\nconst AddNewPlaylist = () => {\n\n  const dispatch = useDispatch();\n\n  const [openForm, setOpenForm] = useState(false);\n\n  const handleClickAddPlaylist = () => {\n    setOpenForm(!openForm);\n  }\n\n  const handleSubmitNewPlaylist = (title) => {\n\n    handleClickAddPlaylist();\n    dispatch(addPlaylistRequestAction(title));\n\n  }\n\n  return <>\n    <AddPlaylistDialog open={openForm} onReject={handleClickAddPlaylist} onAccept={handleSubmitNewPlaylist} context={\"Please fill the playlist's title below\"} dialogTitle=\"Add new playlist\" />\n    <Button variant=\"contained\" fullWidth color=\"primary\" onClick={handleClickAddPlaylist}>\n      Add new playlist\n    </Button>\n  </>\n}\n\nexport default AddNewPlaylist;","import React, { useState } from 'react'\nimport { IconButton } from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddPlaylistDialog from '../AddPlaylist/AddPlaylistDialog';\nimport { useDispatch } from 'react-redux';\nimport { editPlaylistNameRequestAction } from '../../../Actions/PlaylistActions';\n\n\nconst EditPlaylistButton = ({ title, id }) => {\n\n  const dispatch = useDispatch();\n\n  const [openEditPlaylistDialog, setOpenEditPlaylistDialog] = useState(false);\n\n  const handleEditPlaylist = () => {\n    setOpenEditPlaylistDialog(true);\n  }\n\n  const editPlaylistTitle = (newTitle) => {\n    dispatch(editPlaylistNameRequestAction(newTitle, id));\n    setOpenEditPlaylistDialog(false);\n  }\n\n  const handleRejectEditPlaylist = () => {\n    setOpenEditPlaylistDialog(false);\n  }\n\n  return <>\n    <AddPlaylistDialog dialogTitle={\"Edit playlist title\"} open={openEditPlaylistDialog} onReject={handleRejectEditPlaylist} defaultTitle={title} onAccept={editPlaylistTitle} />\n    <IconButton onClick={handleEditPlaylist}>\n      <EditIcon />\n    </IconButton>\n  </>\n}\n\nexport default EditPlaylistButton;","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\nconst FormDialog = ({title = \"Message\", text = \"Are you sure?\", open=false , fnAccept , fnReject })=>{\n  \n  return <Dialog open={open}>\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        {text}\n      </DialogContentText>\n      <DialogActions>\n        <Button onClick={fnReject}>CANCEL</Button>\n        <Button onClick={fnAccept}>SUBMIT</Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nexport default FormDialog;","import React, { useState } from 'react'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton } from '@material-ui/core';\nimport FormDialog from '../../Common/FormDialog';\nimport { useDispatch } from 'react-redux';\nimport { removePlaylistRequestedAction } from '../../../Actions';\n\nconst DeletePlaylistButton = ({ id }) => {\n\n  const dispatch = useDispatch();\n\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n\n  const handleRemovePlaylist = () =>{\n    setOpenConfirmDialog(true);\n  }\n\n  const handleCancel = () => {\n    setOpenConfirmDialog(false);\n  }\n\n  const handleAccept = () => {\n    setOpenConfirmDialog(false);\n    dispatch(removePlaylistRequestedAction(id));\n  }\n\n  return <>\n    <IconButton onClick = {handleRemovePlaylist}>\n      <DeleteIcon />\n    </IconButton>\n    <FormDialog title = \"Info\" open={openConfirmDialog} fnReject = {handleCancel} fnAccept = {handleAccept} text=\"Are you sure you want to remove this playlist?\"/>\n  </>\n}\nexport default DeletePlaylistButton;","import React from 'react'\nimport EditPlaylistButton from './EditPlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\n\nconst PlaylistListActions = ({ playlist }) => {\n  return <>\n  <EditPlaylistButton title = {playlist.title} id = {playlist.id} />\n  <DeletePlaylistButton id = {playlist.id}/>\n  </>\n}\n\nexport default PlaylistListActions;\n","import React, { useEffect } from 'react'\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, CircularProgress, makeStyles } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { playlistsSelector, playlistsLoadingSelector, playlistsErrorSelector } from '../../Selectors/playlistSelector';\nimport { getAllPlaylistsRequestAction, loadSongsRequestedAction } from '../../Actions';\nimport PlaylistListActions from '../Playlist/PlaylistActions/PlaylistListActions';\n\nconst useStyles = makeStyles(theme => ({\n  root:{\n    overflowY: \"scroll\",\n    maxHeight: 300\n  },\n}))\n\nconst PlaylistsList = ()=>{\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const playlists = useSelector(playlistsSelector);\n  const playlistsLoading = useSelector(playlistsLoadingSelector);\n  const playlistsError = useSelector(playlistsErrorSelector);\n  \n\n  useEffect(() => {\n    dispatch(getAllPlaylistsRequestAction());\n  },[dispatch])\n\n  if(playlistsLoading)\n  {\n    return <>\n      <CircularProgress />\n    </>\n  }\n\n  if(playlistsError !== null)\n  {\n    return <>\n      There has been an error\n    </>\n  }\n\n  if(playlists.length < 1 && playlistsError === null)\n  {\n    return <>\n      This list is empty\n    </>\n  }\n\n  const loadPlaylistSongs = (id) =>{\n    dispatch(loadSongsRequestedAction(id));\n  }\n\n  return <>\n  <List className = {classes.root}>\n  {playlists.map((p,idx) =>{\n    return (\n      <ListItem key = {idx} button onClick={()=>loadPlaylistSongs(p.id)}>\n        <ListItemText primary={`${p.title}`} />\n        <ListItemSecondaryAction>\n          <PlaylistListActions playlist = {p}/>          \n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  } )}\n  </List>\n  </>\n}\n\nexport default PlaylistsList;","import React from 'react'\nimport { makeStyles, Paper, Typography, Grid } from '@material-ui/core';\nimport AddNewPlaylist from './AddNewPlaylist';\nimport PlaylistsList from '../Playlists/PlaylistsList';\nconst useStyles = makeStyles(theme=>({\n  root:{\n\n  },\n  paper:{\n    padding: theme.spacing(2),\n  }\n}))\nconst AvailablePlaylists = ()=>{\n  const classes = useStyles();\n  return <>\n    <Paper className={classes.paper}>\n      <Typography variant =\"h5\">\n        Avalaible playlists\n      </Typography>\n      <Grid container>\n        <Grid item xs={12}>\n          {/* List of playlists (contains buttons for each list (remove,edit)) */}\n          <PlaylistsList/>\n        </Grid>\n        <Grid item xs={12}>\n          <AddNewPlaylist/>\n        </Grid>\n      </Grid>    \n    </Paper>\n  </>\n}\n\nexport default AvailablePlaylists;","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { playlistAlertSelector } from '../../Selectors/playlistSelector';\nimport { clearAlertErrorAction } from '../../Actions';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  }\n}));\n\nfunction AlertItem(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Alert = ({ open = false, message = \"Alert\", clearAlert }) => {\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const displayAlert = useSelector(playlistAlertSelector);\n\n  const handleClose = () => {\n    dispatch(clearAlertErrorAction())\n  }\n\n  return <>\n    <Snackbar\n      open={displayAlert ? true : false}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n    >\n      <AlertItem onClose={handleClose} severity={\"error\"} className={classes.root}>\n        {displayAlert}\n      </AlertItem>\n    </Snackbar>\n  </>\n}\n\nexport default Alert;","import React from 'react'\nimport { makeStyles, Typography, Grid} from '@material-ui/core';\nimport CurrentPlaylist from '../Playlist/CurrentPlaylist';\nimport AvailablePlaylists from '../Playlist/AvailablePlaylists';\nimport Alert from '../Common/Alert';\n\nconst useStyles = makeStyles(theme=>({\n  page:{\n    padding:theme.spacing(2),\n  },\n  paper:{\n    padding:theme.spacing(2),\n  }\n}))\n\nconst PlaylistsPage = ()=>{\n  \n  const classes = useStyles();\n  return<div className={classes.page}>\n    <Typography variant=\"h4\" gutterBottom component=\"h2\">\n      Playlist App\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={6}>\n        <CurrentPlaylist/>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <AvailablePlaylists/>\n      </Grid>\n    </Grid>\n    <Alert />\n  </div>\n}\n\nexport default PlaylistsPage;","import React, { useState } from 'react'\nimport { Paper, makeStyles, Typography, Grid, Button, FormControl, InputLabel, Input, FormHelperText, CircularProgress } from '@material-ui/core'\nimport { UserLoginRequestAction } from '../../Actions/UserActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginRequestedSelector } from '../../Selectors/userSelector';\n\nconst useStyles = makeStyles(theme =>({\n  paper:{\n    padding: theme.spacing(2),\n  },\n  flex: {\n    display: 'flex'\n  },\n  loading: {\n    margin: \"auto\",\n  },\n}))\n\nconst LoginPanel = () => {\n\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginRequested = useSelector(loginRequestedSelector);\n  \n  const classes = useStyles();\n\n  const submitLogin = (evt) => {\n    evt.preventDefault();\n\n    dispatch(UserLoginRequestAction(email,password));\n  }\n\n  return <>\n  <Paper className={classes.paper}>\n    <Typography variant=\"h5\" align=\"center\">Login</Typography>\n    <form>\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <FormControl fullWidth>\n          <InputLabel>Email address</InputLabel>\n          <Input fullWidth onChange={(evt)=> setEmail(evt.target.value)}/>\n          <FormHelperText>Please fill your email address</FormHelperText>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl fullWidth>\n          <InputLabel>Password</InputLabel>\n          <Input type=\"password\" fullWidth  onChange={(evt)=> setPassword(evt.target.value)}/>\n          <FormHelperText>Please enter your password</FormHelperText>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <div className= {classes.flex}>\n          {\n            loginRequested?\n            <CircularProgress className={classes.loading} />:\n            <Button type=\"submit\" fullWidth variant=\"contained\" onClick={submitLogin}>Login</Button>\n          }\n          </div>\n      </Grid>\n    </Grid>\n    </form>\n  </Paper>\n  </>\n}\n\nexport default LoginPanel;","import React, { useState } from 'react'\nimport { Paper, makeStyles, Typography, Grid, FormControl, InputLabel, Input, FormHelperText, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux';\nimport { UserSubscribeRequest } from '../../Actions/UserActions';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\nconst RegisterPanel = () => {\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n \n  const subscribe = (evt) => {\n    evt.preventDefault();\n    dispatch(UserSubscribeRequest(email, password));\n  }\n\n  return <>\n    <Paper className={classes.paper}>\n      <Typography variant=\"h5\" align=\"center\">Register</Typography>\n      <form>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormControl fullWidth>\n              <InputLabel>Email address</InputLabel>\n              <Input fullWidth onChange={(evt) => {setEmail(evt.target.value)}} />\n              <FormHelperText>Please fill your email address</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl fullWidth>\n              <InputLabel>Type your password</InputLabel>\n              <Input type=\"password\" fullWidth onChange={(evt)=>setPassword(evt.target.value)} />\n              <FormHelperText>Please enter your password</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl fullWidth>\n              <InputLabel>Confirm your password</InputLabel>\n              <Input type=\"password\" fullWidth onChange={(evt)=>setPasswordConfirm(evt.target.value)} />\n              <FormHelperText>Confirm your password</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <Button type=\"submit\" disabled={password.length <  8 || password !== passwordConfirm} fullWidth variant=\"contained\" onClick={subscribe}>Subscribe</Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  </>\n}\n\nexport default RegisterPanel;","import React from 'react'\nimport { Grid, makeStyles } from '@material-ui/core'\nimport LoginPanel from '../Subscription/LoginPanel';\nimport RegisterPanel from '../Subscription/RegisterPanel';\n\nconst useStyles = makeStyles(theme=>({\n  root :{\n    padding: theme.spacing(2)\n  }\n}));\n\nconst EnterPage = () =>{\n  const classes = useStyles();\n\n  return <div className={classes.root}>\n  <Grid container spacing={2} className={classes.root}>\n    <Grid item xs={12} md={6}>\n      <LoginPanel/>\n    </Grid>\n    <Grid item xs={12} md={6}>\n      <RegisterPanel/>\n    </Grid>\n\n  </Grid>\n  </div>\n}\n\nexport default EnterPage;","import React from 'react'\nimport Header from '../Common/Header';\nimport { Route } from 'react-router-dom';\nimport PlaylistsPage from './PlaylistsPage';\nimport { makeStyles, CssBaseline } from '@material-ui/core';\nimport EnterPage from './EnterPage';\nimport { useSelector } from 'react-redux';\nimport { userLoggedInSelector } from '../../Selectors/userSelector';\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n    },\n    content: {\n    },\n}))\n\nconst StartingPage = ({match}) =>{\n    const classes = useStyles();\n    const userLoggedIn = useSelector(userLoggedInSelector);\n    \n    return <div className={classes.root}>\n      \n      <CssBaseline />\n      \n      <Header />\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer}/>\n        \n        {/* <Route exact path='/login' component={EnterPage}/> */}\n        {/* <Route exact path='/app' component={PlaylistsPage} /> */}\n\n        <Route exact path=\"/\">\n          {userLoggedIn? <PlaylistsPage/> : <EnterPage/> }\n        </Route>\n\n      </main>\n    </div>\n}\n\nexport default StartingPage;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { history } from './storeConfig';\nimport { Switch, Route } from 'react-router-dom';\nimport StartingPage from './Components/Pages/StartingPage';\n\n\nconst Routes = () => {\n  // const userLoggedIn= true;\n  return (\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={StartingPage}/>\n      </Switch>\n    </ConnectedRouter>\n  )\n}\n\nexport default Routes;","import React, { Suspense,Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport Routes from './routes';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createStore from './storeConfig';\n\nconst { store, persistor } = createStore();\n\nconst theme = createMuiTheme({\n  palette:{\n    primary :{\n      main: \"#d3e298\"\n    },\n    secondary:{\n      main : \"#CDE7BE\"\n    }    \n  },\n  typography:{\n    useNextVariants: true,\n    fontFamily:[\n      'Sans-Serif'\n    ].join(','),\n    \n  }\n})\n\nclass App extends Component {\n  render(){\n    return (\n      <Suspense fallback=\"loading\">\n        <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <MuiThemeProvider theme={theme}>\n              <Routes />\n            </MuiThemeProvider>\n          </PersistGate>\n        </Provider>\n      </Suspense>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}